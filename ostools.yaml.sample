# -

credential:
  api_version: 2
  auth_url: "http://127.0.0.1:5000/v2.0"
  username: admin
  api_key: foo
  project_id: admin
#:param str version: version nova api '1.1': '2': '3':
#:param str username: Username
#:param str api_key: API Key
#:param str project_id: Project ID
#:param str auth_url: Auth URL
#:param bool insecure: Allow insecure
#:param float timeout: API timeout, None or 0 disables
#:param str proxy_tenant_id: Tenant ID
#:param str proxy_token: Proxy Token
#:param str region_name: Region Name
#:param str endpoint_type: Endpoint Type
#:param str extensions: Exensions
#:param str service_type: Service Type
#:param str service_name: Service Name
#:param str volume_service_name: Volume Service Name
#:param bool timings: Timings
#:param str bypass_url: Bypass URL
#:param bool os_cache: OS cache
#:param bool no_cache: No cache
#:param bool http_log_debug: Enable debugging for HTTP connections
#:param str auth_system: Auth system
#:param str auth_plugin: Auth plugin
#:param str auth_token: Auth token
#:param str cacert: cacert
#:param str tenant_id: Tenant ID
#:param str user_id: User ID
#:param bool connection_pool: Use a connection pool
#:param str session: Session
#:param str auth: Auth

image:
  endpoint: 'foo'
  images:
    - name: 'debian'
      copy_from: 'http://'
      disk_format: 'qcow2'
      is_public: true


network:
  endpoint_url: 'foo'
  external:
    name: 'ext-subnet'
    network: '10.0.0.0/24'
    gateway: '10.0.0.1'
    dns: '8.8.8.8'
    allocation_pool:
        start: '10.0.0.100'
        end: '10.0.0.200'
  private:
    - name: 'demo'
      tenant_name: 'demo'
      network: '10.0.0.0/24'

tenant:
  - name: 'demo'
    description: 'demo project'
    security_rules:
      - name: 'default'
        proto: 'icmp'
        from_port: -1
        to_port: -1
        cidr: '0.0.0.0/0'

identity:
  - name: 'demo'
    pass: 'demo'
    email: 'demo@foo.bar'
    tenants:
      - 'demo'
    keypair:
      key: 'ssh-rsa ...'
      name: 'demo-key'
